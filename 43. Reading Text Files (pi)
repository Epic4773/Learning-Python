# Use the following link to make a seperate file called "py_30.txt": https://github.com/Epic4773/Learning-Python/blob/main/die.py
# Use the following link to make a seperate file called "pi_million.txt": https://github.com/Epic4773/Learning-Python/blob/main/die.py

# The with keyword opens a file and then closes it after you are done with the file.
# This avoids leaving the file open, which can lead to data corruption.
# It also avoids closing the file before your code is done, resulting in an error.
with open('py_30.txt') as file_object:
  contents = file_object.read()
print(contents)
print(type(contents))

# From the above code, contents is one big String object.
# It prints on 3 lines, because at the end of each line is an invisible new line character '\n'

# Below, contents will be a list of Strings. Each element will be a line in py_30.txt
with open('py_30.txt') as file_object:
  contents = file_object.read().split('\n')
print(type(contents))
print(contents)
for line in contents:
  print(line)

# If we don't use .read(), we can print every line in the file object and it will behave like it did with .split('\n')
with open('py_30.txt') as file_object:
  for line in file_object:
    print(line.strip()) # .strip removes whitespace before and after a string

pi_string = ''
with open('py_30.txt') as file_object:
  for line in file_object:
    pi_string += line.strip()
# pi_string is now one continuous string with no new lines or white spaces
print(pi_string[:100])

birthday = input('Enter your birthday in the form of mmddyy:  ')
if birthday in pi_string:
  print('Your birthday appears in the first million digits of pi  :)')
else:
  print('Your birthday does not appear in the first million digits of pi  :(')
